
package escala;

import java.util.Calendar;

/**
 * Classe responsavel por gerar os calendarios mês a mês
 * @author Dream
 */
public class PnCalendario extends javax.swing.JPanel {

    java.awt.GridBagConstraints gridBagConstraints;
    private int i = 0;
    /**
     * Método construtor de PnCalendario
     */
    public PnCalendario(int idioma) {
        this.i = idioma;
        initComponents();
        semana();
        repaint();
    }
    
    protected void monta(Calendar inicio, Calendar emb, Calendar desemb, boolean reuniao, int trabalho, int folga){
        
        Calendar embarque = emb;
        Calendar desembarque = desemb;
        ...
            
        
        data.set(Calendar.DAY_OF_MONTH, 1); // ajusta a data para o primeiro dia do mês
        int max = data.getActualMaximum(Calendar.DATE); // pega o ultimo dia do mês
        int linha = 2;
            // Configurando Mês e Ano
        String[][] mes = {  {"Janeiro", "Fevereiro", "Março", "Abril", "Maio", "Junho", 
                        "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro"},
                        ...};
        lbMes.setText(mes[i][data.get(Calendar.MONTH)]);
        lbAno.setText(Integer.toString(data.get(Calendar.YEAR)));
        
        for(int dia = 1; max >= dia; dia++){
            
                // Construção do label
            javax.swing.JLabel lbInserir = new javax.swing.JLabel();
            lbInserir.setText(dia<10?"0"+(dia):Integer.toString(dia)); // setando o dia com 2 digitos
            ...
            
                // Pintura das células
            if((data.getTime().equals(embarque.getTime()) || data.getTime().after(embarque.getTime()))
                    && (data.getTime().equals(desembarque.getTime()) || data.getTime().before(desembarque.getTime()))){ 
                if(data.getTime().equals(embarque.getTime())){
                        // Dia do embarque
                    ...
                }else{ // Demais dias
                    ...
                }
            }else{
                    // Demais dias de desembarque
                ...
            }
            if(reuniao && data.getTime().equals(vespera.getTime())){
                ...
            }
            if(data.getTime().equals(desembarque.getTime())){
                    // Dia do desembarque
                System.out.println("desembarcou dia "+data.getTime());
                ...
            }
            
                // Eventos do mouse
            lbInserir.addMouseListener(new java.awt.event.MouseAdapter(){
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                // não sei se farei algo aqui
                System.out.println("clicou no dia "+lbInserir.getText()+" de "+lbMes.getText()+" do ano de "+lbAno.getText());
            }
                public void mouseEntered(java.awt.event.MouseEvent evt){
                    ...
                }
            }); // fim dos eventos
            
                // Inserção do label
            gridBagConstraints = new java.awt.GridBagConstraints();
            if(i >= 2){ // Verifica se é espanhol ou frances
                ...
            }else{ // Demais idiomas
                gridBagConstraints.gridx = data.get(Calendar.DAY_OF_WEEK)-1;
            }
            gridBagConstraints.gridy = linha;
            ...
            add(lbInserir, gridBagConstraints);
            data.add(Calendar.DAY_OF_MONTH, +1);
        }
    }
    
    private void semana(){
        String[][] dias = { {"Dom", "Seg", "Ter", "Qua", "Qui", "Sex", "Sab"},
                            ...};
        jLabel1.setText(dias[i][0]);
        ...
            // Testa o idioma
        if(i >= 2){ // espanhol
            jLabel1.setForeground(java.awt.Color.black);
            jLabel7.setForeground(java.awt.Color.red);
        }else{ // outros
            jLabel1.setForeground(java.awt.Color.red);
            jLabel7.setForeground(java.awt.Color.black);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")                        
    private void initComponents() {
        ...
    }                       


    // Variables declaration - do not modify                     
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    ...;
    // End of variables declaration                   
}
